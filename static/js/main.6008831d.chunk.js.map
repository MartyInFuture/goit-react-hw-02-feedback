{"version":3,"sources":["Components/statistics/Statistics.jsx","Components/feedbackOptions/FeedbackOptions.jsx","Components/App.js","index.js"],"names":["Statistics","good","neutral","negative","rate","className","FeedbackOptions","onClickFunc","type","name","onClick","App","state","addGrade","e","setState","prevState","target","this","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAoBeA,EAlBI,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC7C,OACE,sBAAKC,UAAU,aAAf,UACE,4CACU,IAATD,EACC,kDAEA,sBAAKC,UAAU,SAAf,UACE,uCAAUJ,KACV,0CAAaC,KACb,2CAAcC,KACd,oDAAuBC,EAAvB,cCKKE,EAhBS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACzB,OACE,sBAAKF,UAAU,UAAf,UACE,wBAAQG,KAAK,SAASC,KAAK,OAAOC,QAASH,EAA3C,kBAGA,wBAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,EAA9C,qBAGA,wBAAQC,KAAK,SAASC,KAAK,WAAWC,QAASH,EAA/C,0BC6BSI,E,4MAnCbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,SAAU,EACVC,KAAM,G,EAGRS,SAAW,SAACC,GACV,EAAKC,UAAS,SAACC,GAAe,IAAD,EAC3B,OAAO,EAAP,iBACGF,EAAEG,OAAOR,KAAQO,EAAUF,EAAEG,OAAOR,OAAS,GADhD,qBAGK,EAAKG,MAAMX,MACT,EAAKW,MAAMX,KAAO,EAAKW,MAAMV,QAAU,EAAKU,MAAMT,UACrD,KALJ,M,4CAUJ,WACE,OACE,sBAAKE,UAAU,UAAf,UACE,uDACA,cAAC,EAAD,CAAiBE,YAAaW,KAAKL,WACnC,cAAC,EAAD,CACEZ,KAAMiB,KAAKN,MAAMX,KACjBC,QAASgB,KAAKN,MAAMV,QACpBC,SAAUe,KAAKN,MAAMT,SACrBC,KAAMc,KAAKN,MAAMR,c,GA7BTe,aCClBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6008831d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, negative, rate }) => {\r\n  return (\r\n    <div className=\"statistics\">\r\n      <h2>Statistics</h2>\r\n      {rate === 0 ? (\r\n        <p>No feedback given</p>\r\n      ) : (\r\n        <div className=\"grades\">\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Negative: {negative}</p>\r\n          <p>Positive feedback: {rate}%</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  negative: PropTypes.number,\r\n  rate: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ onClickFunc }) => {\r\n  return (\r\n    <div className=\"buttons\">\r\n      <button type=\"button\" name=\"good\" onClick={onClickFunc}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" name=\"neutral\" onClick={onClickFunc}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" name=\"negative\" onClick={onClickFunc}>\r\n        Negative\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  onClickFunc: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Statistics from './statistics/Statistics.jsx';\r\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions.jsx';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    negative: 0,\r\n    rate: 0,\r\n  };\r\n\r\n  addGrade = (e) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        [e.target.name]: (prevState[e.target.name] += 1),\r\n        rate:\r\n          (this.state.good /\r\n            (this.state.good + this.state.neutral + this.state.negative)) *\r\n          100,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Please leave feedback</h1>\r\n        <FeedbackOptions onClickFunc={this.addGrade} />\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          negative={this.state.negative}\r\n          rate={this.state.rate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}